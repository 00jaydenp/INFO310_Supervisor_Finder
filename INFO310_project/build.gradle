apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'application'


mainClassName = 'server.SupervisorFinderService'

repositories {
    mavenCentral()
}

dependencies {

        def junitVer = '5.7.2'
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitVer
        testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitVer
        testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'

    // jooby
	def joobyVer =  '2.13.0'
	implementation group: 'io.jooby', name: 'jooby-netty', version: joobyVer
	implementation group: 'io.jooby', name: 'jooby-gson', version: joobyVer
	implementation group: 'io.jooby', name: 'jooby-swagger-ui', version: joobyVer
        
    //logging
        implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.36'
        implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.10'

        implementation group: 'com.h2database', name: 'h2', version: '1.4.200'
        implementation group: 'com.zaxxer', name: 'HikariCP', version: '5.0.0'
        implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.5'

        def jdbiVer = '3.21.0'
        implementation group: 'org.jdbi', name: 'jdbi3-core', version: jdbiVer
        implementation group: 'org.jdbi', name: 'jdbi3-sqlobject', version: jdbiVer
    
    testImplementation     'junit:junit:4.13'
}

test {
    useJUnitPlatform()
}

run {
    standardInput = System.in
}

task openProjectFolder {
    group = "Directories"
    description = "Open the project root in the system file manager."
    doFirst {
        println('Opening: ' + file(projectDir))
        java.awt.Desktop.getDesktop().open(file(projectDir));
    }
}

def ignored="""
.gradle
build
*.zip
*.tgz
.DS_Store
"""

task createGitIgnore {
    group = "Git"
    description = "Create the project's .gitignore file."
    doLast {
        def file = new File(projectDir, ".gitignore")
        if ( !file.exists() ) {
            println('Creating .gitignore')
            file.text = ignored
        } else {
            println('.gitignore already exists')
        }
    }
}