openapi: 3.0.0
info:
  title: Supervisor Finder
  version: '1.0'
  description: A service that allows students to find supervisor's research projects
servers:
  - url: 'http://localhost:8090/api'
paths:
  '/supervisor/profile/{staffID}':
    get:
      summary: Get Staff Profile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supervisor'
        '404':
          description: Not Found - No staff profile by that ID
      operationId: get-supervisor-profile
      description: Get the staff members profile by thier staff ID
      tags:
        - Staff
    parameters:
      - schema:
          type: string
        name: staffID
        in: path
        required: true
    delete:
      summary: Delete Staff Profile
      operationId: delete-supervisor-profile
      responses:
        '204':
          description: Profile Successfully deleted
        '404':
          description: Not Found - No staff profile by that ID
      description: Delete Staff profile by Staff ID
      tags:
        - Staff
    put:
      summary: Update Staff Profile
      operationId: put-supervisor-profile
      responses:
        '204':
          description: Profile Successfully Updated
        '404':
          description: Not Found - No staff profile by that ID
        '409':
          description: Profile <b>NOT</b> updated - you may not change the Staff ID
      description: Update a staff members profile by thier staff ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supervisor'
      tags:
        - Staff
  /supervisor/profile:
    get:
      summary: Get All Staff Profiles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supervisor'
      operationId: get-all-supervisor-profiles
      description: Get all of the Supervisor Profiles
      tags:
        - Staff
    parameters: []
  '/supervisor/{email}':
    get:
      summary: Get Supervisor Profile By Email
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        '404':
          description: Not Found - No Supervisor with that Email
      operationId: get-supervisor-profiles-email
      description: Get a Supervisors profile by their email
      tags:
        - Staff
    parameters:
      - schema:
          type: string
        name: email
        in: path
        required: true
  '/student/profile/{studentID} ':
    get:
      summary: Get Stuent Profile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          description: Not Found - No student profile by that ID
      operationId: get-student-profile
      description: Get the Student members profile by their student ID
      tags:
        - Student
    put:
      summary: Update Student Profile
      operationId: put-student-profile
      responses:
        '204':
          description: Profile successfully updated
        '404':
          description: Not Found - No Student profile by that ID
        '409':
          description: Profile <b>NOT</b> updated - you may not change the Student ID
      description: Update the Student members profile by their student ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
        description: ''
      tags:
        - Student
    parameters:
      - schema:
          type: string
        name: studentID
        in: path
        required: true
    delete:
      summary: Delete Student Profile
      operationId: delete-student-profile
      responses:
        '204':
          description: Profile Successfully deleted
        '404':
          description: Not Found - No student profile by that ID
      description: Delete Student profile by their Student ID
      tags:
        - Student
  /student/profile:
    get:
      summary: Get All Student Profiles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
      operationId: get-all-student-profiles
      description: Get all of the Student profiles
      tags:
        - Student
    parameters: []
  '/student/{email}':
    get:
      summary: Get Student Profile By Email
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        '404':
          description: Not Found - No Student with that Email
      operationId: get-student-profiles-email
      description: Get a Students profile by their email
      tags:
        - Student
    parameters:
      - schema:
          type: string
        name: email
        in: path
        required: true
  /supervisor/projects:
    post:
      summary: Add Project
      operationId: post-supervisor-projects
      responses:
        '200':
          description: Project Successfully added
        '422':
          description: Project <b>NOT</b> added - there is already a product with that ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      description: Add a project to the system
      tags:
        - Projects
    get:
      summary: Get All Projects
      operationId: get-supervisor-projects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
      description: Get all the projects in the system
      tags:
        - Projects
  '/supervisor/projects/{staffID}':
    parameters:
      - schema:
          type: string
        name: staffID
        in: path
        required: true
    get:
      summary: Get Projects By Staff ID
      tags:
        - Projects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '404':
          description: Not Found - No projects under that Staff ID
      operationId: get-projects-staffID
      description: Get the projects connected to a staff member
  '/projects/{projectID}':
    parameters:
      - schema:
          type: string
        name: projectID
        in: path
        required: true
    put:
      summary: Update Project
      operationId: put-projects
      responses:
        '204':
          description: Project Succeessfully Updated
        '404':
          description: Not Found - No project with that ID
        '409':
          description: Project <b>NOT</b> updated - you are not allowed to change the ID via this opperation
      tags:
        - Projects
      description: Udate the project using its project ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
    delete:
      summary: Delete Project
      operationId: delete-projects
      responses:
        '204':
          description: Project Successfully deleted
        '404':
          description: Not Found - No project with that ID
      tags:
        - Projects
      description: Deletes a project using its project ID
    get:
      summary: Get Project
      operationId: get-projects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: Not Found - No project with that ID
      tags:
        - Projects
      description: Gets a certian project usng the projects ID
  '/projects/search/{query}':
    parameters:
      - schema:
          type: string
        name: query
        in: path
        required: true
    get:
      summary: Get Projects by search term
      tags:
        - Projects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '404':
          description: Not Found - No project matching that query term
      operationId: get-projects-query
      description: Get a project by a query
  '/login/{email}':
    get:
      summary: Login user
      operationId: get-login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Not Found
      tags:
        - Login
      description: Log in a user top the system
    parameters:
      - schema:
          type: string
        name: email
        in: path
        required: true
    delete:
      summary: ''
      operationId: delete-login-email
      responses:
        '204':
          description: User Successfully deleted
        '404':
          description: User Not Found
      tags:
        - Login
  /login:
    get:
      summary: Get All Logins
      operationId: get-login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      tags:
        - Login
      description: Get all the system users
    parameters: []
  /sign-up:
    post:
      summary: Sign up User
      operationId: post-sign-up
      responses:
        '201':
          description: User Created
        '422':
          description: User <b>NOT</b> added - there is already a user with that email
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      description: Posts an entered user
      tags:
        - Sign Up
  /sign-up/supervisor:
    post:
      summary: Sign up Supervisor
      operationId: post-sign-up-supervisor
      responses:
        '201':
          description: Supervisor Created
      description: Signs up with supervisor privilidges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supervisor'
      tags:
        - Staff
  /sign-up/student:
    post:
      summary: Sign up Student
      operationId: post-sign-up-supervisor
      responses:
        '201':
          description: Student Created
      description: Signs up with student privilidges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      tags:
        - Student
    parameters: []
  '/project/application/{projectID}':
    parameters:
      - schema:
          type: string
        name: projectID
        in: path
        required: true
    get:
      summary: Get Application by Project ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
        '404':
          description: Not Found - No applications in that project
      operationId: get-application-projectID
      description: ''
      tags:
        - Application
  /project/application:
    parameters: []
    post:
      summary: Add Application
      operationId: post-application-projectID
      responses:
        '202':
          description: Application created
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
      tags:
        - Application
  '/application/{studentID}':
    parameters:
      - schema:
          type: string
        name: studentID
        in: path
        required: true
    get:
      summary: Get Applications by student ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
      operationId: get-application-studentID
      tags:
        - Application
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      x-examples: {}
      properties:
        email:
          type: string
          format: email
          description: User's email
        password:
          type: string
          description: 'User''s Password '
          format: password
      required:
        - email
        - password
    Supervisor:
      title: Supervisor
      type: object
      properties:
        staffID:
          type: string
          description: Staffs university ID
        firstName:
          type: string
          description: Staffs first name
        lastName:
          type: string
          description: Staffs last name
        interests:
          type: string
        description:
          type: string
        phoneNumber:
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
        - staffID
        - firstName
        - lastName
        - interests
    Student:
      title: Student
      type: object
      properties:
        studentID:
          type: string
          description: Students University ID
        firstName:
          type: string
          description: Students First Name
        lastName:
          type: string
          description: Students Last Name
        interests:
          description: Students Areas of interest
          type: string
        description:
          type: string
        phoneNumber:
          type: string
        gpa:
          type: number
        address:
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
        - studentID
        - firstName
        - lastName
        - interests
    Project:
      title: Project
      type: object
      properties:
        projectID:
          type: string
        name:
          type: string
        description:
          type: string
        status:
          type: string
        date:
          type: string
          format: date
        supervisor:
          $ref: '#/components/schemas/Supervisor'
    Application:
      title: Application
      type: object
      properties:
        applicationID:
          type: string
        student:
          $ref: '#/components/schemas/Student'
        project:
          $ref: '#/components/schemas/Project'
  responses: {}
  securitySchemes: {}
tags:
  - name: Application
  - name: Login
  - name: Projects
  - name: Sign Up
  - name: Staff
  - name: Student
